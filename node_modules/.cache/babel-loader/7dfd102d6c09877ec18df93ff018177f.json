{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\UDEMY\\\\Interview\\\\react-Wowcher-Test\\\\src\\\\datatable\\\\index.js\";\nimport React from 'react';\n\nconst Datatable = props => {\n  const formatNumber = number => new Intl.NumberFormat('en', {\n    minimumFractionDigits: 2\n  }).format(number);\n\n  let totalRevenue = props.data.reduce(function (acc, curr) {\n    return acc + curr.unitPrice * curr.soldQuantity;\n  }, 0);\n  totalRevenue = totalRevenue.toFixed(2);\n  return /*#__PURE__*/React.createElement(\"table\", {\n    cellPadding: 5,\n    cellSpacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, \"sl no.\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"Revenue\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, props.data.map(prop => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, prop.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, prop.productName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, formatNumber((parseFloat(prop.unitPrice, 2) * parseFloat(prop.soldQuantity, 2)).toFixed(2)))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, formatNumber(totalRevenue)))));\n};\n\nexport default Datatable;","map":{"version":3,"sources":["C:/Users/HP/Desktop/UDEMY/Interview/react-Wowcher-Test/src/datatable/index.js"],"names":["React","Datatable","props","formatNumber","number","Intl","NumberFormat","minimumFractionDigits","format","totalRevenue","data","reduce","acc","curr","unitPrice","soldQuantity","toFixed","map","prop","id","productName","parseFloat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,YAAY,GAAIC,MAAD,IACnB,IAAIC,IAAI,CAACC,YAAT,CAAsB,IAAtB,EAA4B;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAA5B,EAA0DC,MAA1D,CAAiEJ,MAAjE,CADF;;AAGA,MAAIK,YAAY,GAAGP,KAAK,CAACQ,IAAN,CAAWC,MAAX,CAAkB,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACxD,WAAOD,GAAG,GAAGC,IAAI,CAACC,SAAL,GAAiBD,IAAI,CAACE,YAAnC;AACD,GAFkB,EAEhB,CAFgB,CAAnB;AAGAN,EAAAA,YAAY,GAAGA,YAAY,CAACO,OAAb,CAAqB,CAArB,CAAf;AAEA,sBACE;AAAO,IAAA,WAAW,EAAE,CAApB;AAAuB,IAAA,WAAW,EAAE,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,CAACQ,IAAN,CAAWO,GAAX,CAAgBC,IAAD,iBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,EAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,WAAV,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,YAAY,CAAC,CACZkB,UAAU,CAACH,IAAI,CAACJ,SAAN,EAAiB,CAAjB,CAAV,GAAgCO,UAAU,CAACH,IAAI,CAACH,YAAN,EAAoB,CAApB,CAD9B,EAEZC,OAFY,CAEJ,CAFI,CAAD,CADf,CAHF,CADD,CADH,CARF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,YAAY,CAACM,YAAD,CAAjB,CAHF,CADF,CArBF,CADF;AA+BD,CAxCD;;AA0CA,eAAeR,SAAf","sourcesContent":["import React from 'react'\r\n\r\nconst Datatable = (props) => {\r\n  const formatNumber = (number) =>\r\n    new Intl.NumberFormat('en', { minimumFractionDigits: 2 }).format(number)\r\n\r\n  let totalRevenue = props.data.reduce(function (acc, curr) {\r\n    return acc + curr.unitPrice * curr.soldQuantity\r\n  }, 0)\r\n  totalRevenue = totalRevenue.toFixed(2)\r\n\r\n  return (\r\n    <table cellPadding={5} cellSpacing={5}>\r\n      <thead>\r\n        <tr>\r\n          <th>sl no.</th>\r\n          <th>Product</th>\r\n          <th>Revenue</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.data.map((prop) => (\r\n          <tr>\r\n            <td>{prop.id}</td>\r\n            <td>{prop.productName}</td>\r\n            <td>\r\n              {formatNumber((\r\n                parseFloat(prop.unitPrice, 2) * parseFloat(prop.soldQuantity, 2)\r\n              ).toFixed(2))}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          <td>Total</td>\r\n          <td></td>\r\n          <td>{formatNumber(totalRevenue)}</td>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default Datatable\r\n"]},"metadata":{},"sourceType":"module"}